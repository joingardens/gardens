/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/comment_with_author": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comment_with_author.id"];
          slug?: parameters["rowFilter.comment_with_author.slug"];
          createdAt?: parameters["rowFilter.comment_with_author.createdAt"];
          updatedAt?: parameters["rowFilter.comment_with_author.updatedAt"];
          title?: parameters["rowFilter.comment_with_author.title"];
          content?: parameters["rowFilter.comment_with_author.content"];
          isPublished?: parameters["rowFilter.comment_with_author.isPublished"];
          authorId?: parameters["rowFilter.comment_with_author.authorId"];
          parentId?: parameters["rowFilter.comment_with_author.parentId"];
          live?: parameters["rowFilter.comment_with_author.live"];
          siteId?: parameters["rowFilter.comment_with_author.siteId"];
          isPinned?: parameters["rowFilter.comment_with_author.isPinned"];
          isDeleted?: parameters["rowFilter.comment_with_author.isDeleted"];
          isApproved?: parameters["rowFilter.comment_with_author.isApproved"];
          author?: parameters["rowFilter.comment_with_author.author"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comment_with_author"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_linear_view": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_linear_view.id"];
          slug?: parameters["rowFilter.comments_linear_view.slug"];
          createdAt?: parameters["rowFilter.comments_linear_view.createdAt"];
          updatedAt?: parameters["rowFilter.comments_linear_view.updatedAt"];
          title?: parameters["rowFilter.comments_linear_view.title"];
          content?: parameters["rowFilter.comments_linear_view.content"];
          isPublished?: parameters["rowFilter.comments_linear_view.isPublished"];
          authorId?: parameters["rowFilter.comments_linear_view.authorId"];
          parentId?: parameters["rowFilter.comments_linear_view.parentId"];
          live?: parameters["rowFilter.comments_linear_view.live"];
          siteId?: parameters["rowFilter.comments_linear_view.siteId"];
          isPinned?: parameters["rowFilter.comments_linear_view.isPinned"];
          isDeleted?: parameters["rowFilter.comments_linear_view.isDeleted"];
          isApproved?: parameters["rowFilter.comments_linear_view.isApproved"];
          author?: parameters["rowFilter.comments_linear_view.author"];
          parent?: parameters["rowFilter.comments_linear_view.parent"];
          responses?: parameters["rowFilter.comments_linear_view.responses"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_linear_view"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_thread": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_thread.id"];
          slug?: parameters["rowFilter.comments_thread.slug"];
          createdAt?: parameters["rowFilter.comments_thread.createdAt"];
          updatedAt?: parameters["rowFilter.comments_thread.updatedAt"];
          title?: parameters["rowFilter.comments_thread.title"];
          content?: parameters["rowFilter.comments_thread.content"];
          isPublished?: parameters["rowFilter.comments_thread.isPublished"];
          authorId?: parameters["rowFilter.comments_thread.authorId"];
          parentId?: parameters["rowFilter.comments_thread.parentId"];
          live?: parameters["rowFilter.comments_thread.live"];
          siteId?: parameters["rowFilter.comments_thread.siteId"];
          isPinned?: parameters["rowFilter.comments_thread.isPinned"];
          isDeleted?: parameters["rowFilter.comments_thread.isDeleted"];
          isApproved?: parameters["rowFilter.comments_thread.isApproved"];
          author?: parameters["rowFilter.comments_thread.author"];
          votes?: parameters["rowFilter.comments_thread.votes"];
          upvotes?: parameters["rowFilter.comments_thread.upvotes"];
          downvotes?: parameters["rowFilter.comments_thread.downvotes"];
          depth?: parameters["rowFilter.comments_thread.depth"];
          path?: parameters["rowFilter.comments_thread.path"];
          pathVotesRecent?: parameters["rowFilter.comments_thread.pathVotesRecent"];
          pathLeastRecent?: parameters["rowFilter.comments_thread.pathLeastRecent"];
          pathMostRecent?: parameters["rowFilter.comments_thread.pathMostRecent"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_thread"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_thread_with_user_vote": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_thread_with_user_vote.id"];
          slug?: parameters["rowFilter.comments_thread_with_user_vote.slug"];
          createdAt?: parameters["rowFilter.comments_thread_with_user_vote.createdAt"];
          updatedAt?: parameters["rowFilter.comments_thread_with_user_vote.updatedAt"];
          title?: parameters["rowFilter.comments_thread_with_user_vote.title"];
          content?: parameters["rowFilter.comments_thread_with_user_vote.content"];
          isPublished?: parameters["rowFilter.comments_thread_with_user_vote.isPublished"];
          authorId?: parameters["rowFilter.comments_thread_with_user_vote.authorId"];
          parentId?: parameters["rowFilter.comments_thread_with_user_vote.parentId"];
          live?: parameters["rowFilter.comments_thread_with_user_vote.live"];
          siteId?: parameters["rowFilter.comments_thread_with_user_vote.siteId"];
          isPinned?: parameters["rowFilter.comments_thread_with_user_vote.isPinned"];
          isDeleted?: parameters["rowFilter.comments_thread_with_user_vote.isDeleted"];
          isApproved?: parameters["rowFilter.comments_thread_with_user_vote.isApproved"];
          author?: parameters["rowFilter.comments_thread_with_user_vote.author"];
          votes?: parameters["rowFilter.comments_thread_with_user_vote.votes"];
          upvotes?: parameters["rowFilter.comments_thread_with_user_vote.upvotes"];
          downvotes?: parameters["rowFilter.comments_thread_with_user_vote.downvotes"];
          depth?: parameters["rowFilter.comments_thread_with_user_vote.depth"];
          path?: parameters["rowFilter.comments_thread_with_user_vote.path"];
          pathVotesRecent?: parameters["rowFilter.comments_thread_with_user_vote.pathVotesRecent"];
          pathLeastRecent?: parameters["rowFilter.comments_thread_with_user_vote.pathLeastRecent"];
          pathMostRecent?: parameters["rowFilter.comments_thread_with_user_vote.pathMostRecent"];
          userVoteValue?: parameters["rowFilter.comments_thread_with_user_vote.userVoteValue"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_thread_with_user_vote"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/comments_with_author_votes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments_with_author_votes.id"];
          slug?: parameters["rowFilter.comments_with_author_votes.slug"];
          createdAt?: parameters["rowFilter.comments_with_author_votes.createdAt"];
          updatedAt?: parameters["rowFilter.comments_with_author_votes.updatedAt"];
          title?: parameters["rowFilter.comments_with_author_votes.title"];
          content?: parameters["rowFilter.comments_with_author_votes.content"];
          isPublished?: parameters["rowFilter.comments_with_author_votes.isPublished"];
          authorId?: parameters["rowFilter.comments_with_author_votes.authorId"];
          parentId?: parameters["rowFilter.comments_with_author_votes.parentId"];
          live?: parameters["rowFilter.comments_with_author_votes.live"];
          siteId?: parameters["rowFilter.comments_with_author_votes.siteId"];
          isPinned?: parameters["rowFilter.comments_with_author_votes.isPinned"];
          isDeleted?: parameters["rowFilter.comments_with_author_votes.isDeleted"];
          isApproved?: parameters["rowFilter.comments_with_author_votes.isApproved"];
          author?: parameters["rowFilter.comments_with_author_votes.author"];
          votes?: parameters["rowFilter.comments_with_author_votes.votes"];
          upvotes?: parameters["rowFilter.comments_with_author_votes.upvotes"];
          downvotes?: parameters["rowFilter.comments_with_author_votes.downvotes"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments_with_author_votes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/customers": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customers"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customers.id"];
          stripe_customer_id?: parameters["rowFilter.customers.stripe_customer_id"];
        };
        body: {
          /** customers */
          customers?: definitions["customers"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/flow_items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.flow_items.id"];
          flow?: parameters["rowFilter.flow_items.flow"];
          job_tool?: parameters["rowFilter.flow_items.job_tool"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["flow_items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** flow_items */
          flow_items?: definitions["flow_items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.flow_items.id"];
          flow?: parameters["rowFilter.flow_items.flow"];
          job_tool?: parameters["rowFilter.flow_items.job_tool"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.flow_items.id"];
          flow?: parameters["rowFilter.flow_items.flow"];
          job_tool?: parameters["rowFilter.flow_items.job_tool"];
        };
        body: {
          /** flow_items */
          flow_items?: definitions["flow_items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/flows_outputs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.flows_outputs.id"];
          flow?: parameters["rowFilter.flows_outputs.flow"];
          output?: parameters["rowFilter.flows_outputs.output"];
          title?: parameters["rowFilter.flows_outputs.title"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["flows_outputs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** flows_outputs */
          flows_outputs?: definitions["flows_outputs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.flows_outputs.id"];
          flow?: parameters["rowFilter.flows_outputs.flow"];
          output?: parameters["rowFilter.flows_outputs.output"];
          title?: parameters["rowFilter.flows_outputs.title"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.flows_outputs.id"];
          flow?: parameters["rowFilter.flows_outputs.flow"];
          output?: parameters["rowFilter.flows_outputs.output"];
          title?: parameters["rowFilter.flows_outputs.title"];
        };
        body: {
          /** flows_outputs */
          flows_outputs?: definitions["flows_outputs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/growing": {
    get: {
      parameters: {
        query: {
          Name?: parameters["rowFilter.growing.Name"];
          Brief?: parameters["rowFilter.growing.Brief"];
          Cover?: parameters["rowFilter.growing.Cover"];
          "Created at"?: parameters["rowFilter.growing.Created at"];
          Files?: parameters["rowFilter.growing.Files"];
          Tags?: parameters["rowFilter.growing.Tags"];
          Type?: parameters["rowFilter.growing.Type"];
          URL?: parameters["rowFilter.growing.URL"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["growing"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** growing */
          growing?: definitions["growing"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          Name?: parameters["rowFilter.growing.Name"];
          Brief?: parameters["rowFilter.growing.Brief"];
          Cover?: parameters["rowFilter.growing.Cover"];
          "Created at"?: parameters["rowFilter.growing.Created at"];
          Files?: parameters["rowFilter.growing.Files"];
          Tags?: parameters["rowFilter.growing.Tags"];
          Type?: parameters["rowFilter.growing.Type"];
          URL?: parameters["rowFilter.growing.URL"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          Name?: parameters["rowFilter.growing.Name"];
          Brief?: parameters["rowFilter.growing.Brief"];
          Cover?: parameters["rowFilter.growing.Cover"];
          "Created at"?: parameters["rowFilter.growing.Created at"];
          Files?: parameters["rowFilter.growing.Files"];
          Tags?: parameters["rowFilter.growing.Tags"];
          Type?: parameters["rowFilter.growing.Type"];
          URL?: parameters["rowFilter.growing.URL"];
        };
        body: {
          /** growing */
          growing?: definitions["growing"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/industries": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.industries.id"];
          industry?: parameters["rowFilter.industries.industry"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["industries"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** industries */
          industries?: definitions["industries"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.industries.id"];
          industry?: parameters["rowFilter.industries.industry"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.industries.id"];
          industry?: parameters["rowFilter.industries.industry"];
        };
        body: {
          /** industries */
          industries?: definitions["industries"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/job_groups": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.job_groups.id"];
          job_group?: parameters["rowFilter.job_groups.job_group"];
          emoji?: parameters["rowFilter.job_groups.emoji"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["job_groups"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** job_groups */
          job_groups?: definitions["job_groups"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.job_groups.id"];
          job_group?: parameters["rowFilter.job_groups.job_group"];
          emoji?: parameters["rowFilter.job_groups.emoji"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.job_groups.id"];
          job_group?: parameters["rowFilter.job_groups.job_group"];
          emoji?: parameters["rowFilter.job_groups.emoji"];
        };
        body: {
          /** job_groups */
          job_groups?: definitions["job_groups"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/jobs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          job?: parameters["rowFilter.jobs.job"];
          job_group?: parameters["rowFilter.jobs.job_group"];
          description?: parameters["rowFilter.jobs.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["jobs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** jobs */
          jobs?: definitions["jobs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          job?: parameters["rowFilter.jobs.job"];
          job_group?: parameters["rowFilter.jobs.job_group"];
          description?: parameters["rowFilter.jobs.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs.id"];
          job?: parameters["rowFilter.jobs.job"];
          job_group?: parameters["rowFilter.jobs.job_group"];
          description?: parameters["rowFilter.jobs.description"];
        };
        body: {
          /** jobs */
          jobs?: definitions["jobs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/jobs_tools": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs_tools.id"];
          job?: parameters["rowFilter.jobs_tools.job"];
          tool?: parameters["rowFilter.jobs_tools.tool"];
          instruction_link?: parameters["rowFilter.jobs_tools.instruction_link"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["jobs_tools"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** jobs_tools */
          jobs_tools?: definitions["jobs_tools"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs_tools.id"];
          job?: parameters["rowFilter.jobs_tools.job"];
          tool?: parameters["rowFilter.jobs_tools.tool"];
          instruction_link?: parameters["rowFilter.jobs_tools.instruction_link"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.jobs_tools.id"];
          job?: parameters["rowFilter.jobs_tools.job"];
          tool?: parameters["rowFilter.jobs_tools.tool"];
          instruction_link?: parameters["rowFilter.jobs_tools.instruction_link"];
        };
        body: {
          /** jobs_tools */
          jobs_tools?: definitions["jobs_tools"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/listings": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.listings.id"];
          listing?: parameters["rowFilter.listings.listing"];
          listing_type?: parameters["rowFilter.listings.listing_type"];
          URL?: parameters["rowFilter.listings.URL"];
          Description?: parameters["rowFilter.listings.Description"];
          Rating?: parameters["rowFilter.listings.Rating"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["listings"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** listings */
          listings?: definitions["listings"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.listings.id"];
          listing?: parameters["rowFilter.listings.listing"];
          listing_type?: parameters["rowFilter.listings.listing_type"];
          URL?: parameters["rowFilter.listings.URL"];
          Description?: parameters["rowFilter.listings.Description"];
          Rating?: parameters["rowFilter.listings.Rating"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.listings.id"];
          listing?: parameters["rowFilter.listings.listing"];
          listing_type?: parameters["rowFilter.listings.listing_type"];
          URL?: parameters["rowFilter.listings.URL"];
          Description?: parameters["rowFilter.listings.Description"];
          Rating?: parameters["rowFilter.listings.Rating"];
        };
        body: {
          /** listings */
          listings?: definitions["listings"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/methods": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.methods.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["methods"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** methods */
          methods?: definitions["methods"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.methods.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.methods.id"];
        };
        body: {
          /** methods */
          methods?: definitions["methods"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/models": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.models.id"];
          model?: parameters["rowFilter.models.model"];
          applications?: parameters["rowFilter.models.applications"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["models"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** models */
          models?: definitions["models"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.models.id"];
          model?: parameters["rowFilter.models.model"];
          applications?: parameters["rowFilter.models.applications"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.models.id"];
          model?: parameters["rowFilter.models.model"];
          applications?: parameters["rowFilter.models.applications"];
        };
        body: {
          /** models */
          models?: definitions["models"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/organisations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organisations.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["organisations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** organisations */
          organisations?: definitions["organisations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organisations.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organisations.id"];
        };
        body: {
          /** organisations */
          organisations?: definitions["organisations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/outputs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.outputs.id"];
          output?: parameters["rowFilter.outputs.output"];
          description?: parameters["rowFilter.outputs.description"];
          job_group?: parameters["rowFilter.outputs.job_group"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["outputs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** outputs */
          outputs?: definitions["outputs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.outputs.id"];
          output?: parameters["rowFilter.outputs.output"];
          description?: parameters["rowFilter.outputs.description"];
          job_group?: parameters["rowFilter.outputs.job_group"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.outputs.id"];
          output?: parameters["rowFilter.outputs.output"];
          description?: parameters["rowFilter.outputs.description"];
          job_group?: parameters["rowFilter.outputs.job_group"];
        };
        body: {
          /** outputs */
          outputs?: definitions["outputs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/posts": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          slug?: parameters["rowFilter.posts.slug"];
          createdAt?: parameters["rowFilter.posts.createdAt"];
          updatedAt?: parameters["rowFilter.posts.updatedAt"];
          title?: parameters["rowFilter.posts.title"];
          content?: parameters["rowFilter.posts.content"];
          isPublished?: parameters["rowFilter.posts.isPublished"];
          authorId?: parameters["rowFilter.posts.authorId"];
          parentId?: parameters["rowFilter.posts.parentId"];
          live?: parameters["rowFilter.posts.live"];
          siteId?: parameters["rowFilter.posts.siteId"];
          isPinned?: parameters["rowFilter.posts.isPinned"];
          isDeleted?: parameters["rowFilter.posts.isDeleted"];
          isApproved?: parameters["rowFilter.posts.isApproved"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["posts"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          slug?: parameters["rowFilter.posts.slug"];
          createdAt?: parameters["rowFilter.posts.createdAt"];
          updatedAt?: parameters["rowFilter.posts.updatedAt"];
          title?: parameters["rowFilter.posts.title"];
          content?: parameters["rowFilter.posts.content"];
          isPublished?: parameters["rowFilter.posts.isPublished"];
          authorId?: parameters["rowFilter.posts.authorId"];
          parentId?: parameters["rowFilter.posts.parentId"];
          live?: parameters["rowFilter.posts.live"];
          siteId?: parameters["rowFilter.posts.siteId"];
          isPinned?: parameters["rowFilter.posts.isPinned"];
          isDeleted?: parameters["rowFilter.posts.isDeleted"];
          isApproved?: parameters["rowFilter.posts.isApproved"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.posts.id"];
          slug?: parameters["rowFilter.posts.slug"];
          createdAt?: parameters["rowFilter.posts.createdAt"];
          updatedAt?: parameters["rowFilter.posts.updatedAt"];
          title?: parameters["rowFilter.posts.title"];
          content?: parameters["rowFilter.posts.content"];
          isPublished?: parameters["rowFilter.posts.isPublished"];
          authorId?: parameters["rowFilter.posts.authorId"];
          parentId?: parameters["rowFilter.posts.parentId"];
          live?: parameters["rowFilter.posts.live"];
          siteId?: parameters["rowFilter.posts.siteId"];
          isPinned?: parameters["rowFilter.posts.isPinned"];
          isDeleted?: parameters["rowFilter.posts.isDeleted"];
          isApproved?: parameters["rowFilter.posts.isApproved"];
        };
        body: {
          /** posts */
          posts?: definitions["posts"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/prices": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.prices.id"];
          product_id?: parameters["rowFilter.prices.product_id"];
          active?: parameters["rowFilter.prices.active"];
          description?: parameters["rowFilter.prices.description"];
          unit_amount?: parameters["rowFilter.prices.unit_amount"];
          currency?: parameters["rowFilter.prices.currency"];
          type?: parameters["rowFilter.prices.type"];
          interval?: parameters["rowFilter.prices.interval"];
          interval_count?: parameters["rowFilter.prices.interval_count"];
          trial_period_days?: parameters["rowFilter.prices.trial_period_days"];
          metadata?: parameters["rowFilter.prices.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["prices"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** prices */
          prices?: definitions["prices"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.prices.id"];
          product_id?: parameters["rowFilter.prices.product_id"];
          active?: parameters["rowFilter.prices.active"];
          description?: parameters["rowFilter.prices.description"];
          unit_amount?: parameters["rowFilter.prices.unit_amount"];
          currency?: parameters["rowFilter.prices.currency"];
          type?: parameters["rowFilter.prices.type"];
          interval?: parameters["rowFilter.prices.interval"];
          interval_count?: parameters["rowFilter.prices.interval_count"];
          trial_period_days?: parameters["rowFilter.prices.trial_period_days"];
          metadata?: parameters["rowFilter.prices.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.prices.id"];
          product_id?: parameters["rowFilter.prices.product_id"];
          active?: parameters["rowFilter.prices.active"];
          description?: parameters["rowFilter.prices.description"];
          unit_amount?: parameters["rowFilter.prices.unit_amount"];
          currency?: parameters["rowFilter.prices.currency"];
          type?: parameters["rowFilter.prices.type"];
          interval?: parameters["rowFilter.prices.interval"];
          interval_count?: parameters["rowFilter.prices.interval_count"];
          trial_period_days?: parameters["rowFilter.prices.trial_period_days"];
          metadata?: parameters["rowFilter.prices.metadata"];
        };
        body: {
          /** prices */
          prices?: definitions["prices"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/products": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          active?: parameters["rowFilter.products.active"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          image?: parameters["rowFilter.products.image"];
          metadata?: parameters["rowFilter.products.metadata"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["products"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** products */
          products?: definitions["products"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          active?: parameters["rowFilter.products.active"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          image?: parameters["rowFilter.products.image"];
          metadata?: parameters["rowFilter.products.metadata"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.products.id"];
          active?: parameters["rowFilter.products.active"];
          name?: parameters["rowFilter.products.name"];
          description?: parameters["rowFilter.products.description"];
          image?: parameters["rowFilter.products.image"];
          metadata?: parameters["rowFilter.products.metadata"];
        };
        body: {
          /** products */
          products?: definitions["products"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/sites": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sites.id"];
          siteDomain?: parameters["rowFilter.sites.siteDomain"];
          ownerId?: parameters["rowFilter.sites.ownerId"];
          name?: parameters["rowFilter.sites.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sites"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sites */
          sites?: definitions["sites"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sites.id"];
          siteDomain?: parameters["rowFilter.sites.siteDomain"];
          ownerId?: parameters["rowFilter.sites.ownerId"];
          name?: parameters["rowFilter.sites.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sites.id"];
          siteDomain?: parameters["rowFilter.sites.siteDomain"];
          ownerId?: parameters["rowFilter.sites.ownerId"];
          name?: parameters["rowFilter.sites.name"];
        };
        body: {
          /** sites */
          sites?: definitions["sites"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/subscriptions": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          user_id?: parameters["rowFilter.subscriptions.user_id"];
          status?: parameters["rowFilter.subscriptions.status"];
          metadata?: parameters["rowFilter.subscriptions.metadata"];
          price_id?: parameters["rowFilter.subscriptions.price_id"];
          quantity?: parameters["rowFilter.subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.subscriptions.created"];
          current_period_start?: parameters["rowFilter.subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.subscriptions.trial_end"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["subscriptions"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          user_id?: parameters["rowFilter.subscriptions.user_id"];
          status?: parameters["rowFilter.subscriptions.status"];
          metadata?: parameters["rowFilter.subscriptions.metadata"];
          price_id?: parameters["rowFilter.subscriptions.price_id"];
          quantity?: parameters["rowFilter.subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.subscriptions.created"];
          current_period_start?: parameters["rowFilter.subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.subscriptions.trial_end"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.subscriptions.id"];
          user_id?: parameters["rowFilter.subscriptions.user_id"];
          status?: parameters["rowFilter.subscriptions.status"];
          metadata?: parameters["rowFilter.subscriptions.metadata"];
          price_id?: parameters["rowFilter.subscriptions.price_id"];
          quantity?: parameters["rowFilter.subscriptions.quantity"];
          cancel_at_period_end?: parameters["rowFilter.subscriptions.cancel_at_period_end"];
          created?: parameters["rowFilter.subscriptions.created"];
          current_period_start?: parameters["rowFilter.subscriptions.current_period_start"];
          current_period_end?: parameters["rowFilter.subscriptions.current_period_end"];
          ended_at?: parameters["rowFilter.subscriptions.ended_at"];
          cancel_at?: parameters["rowFilter.subscriptions.cancel_at"];
          canceled_at?: parameters["rowFilter.subscriptions.canceled_at"];
          trial_start?: parameters["rowFilter.subscriptions.trial_start"];
          trial_end?: parameters["rowFilter.subscriptions.trial_end"];
        };
        body: {
          /** subscriptions */
          subscriptions?: definitions["subscriptions"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/tools": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tools.id"];
          tool?: parameters["rowFilter.tools.tool"];
          category?: parameters["rowFilter.tools.category"];
          link?: parameters["rowFilter.tools.link"];
          model?: parameters["rowFilter.tools.model"];
          portability?: parameters["rowFilter.tools.portability"];
          description?: parameters["rowFilter.tools.description"];
          logo_url?: parameters["rowFilter.tools.logo_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["tools"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tools */
          tools?: definitions["tools"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tools.id"];
          tool?: parameters["rowFilter.tools.tool"];
          category?: parameters["rowFilter.tools.category"];
          link?: parameters["rowFilter.tools.link"];
          model?: parameters["rowFilter.tools.model"];
          portability?: parameters["rowFilter.tools.portability"];
          description?: parameters["rowFilter.tools.description"];
          logo_url?: parameters["rowFilter.tools.logo_url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.tools.id"];
          tool?: parameters["rowFilter.tools.tool"];
          category?: parameters["rowFilter.tools.category"];
          link?: parameters["rowFilter.tools.link"];
          model?: parameters["rowFilter.tools.model"];
          portability?: parameters["rowFilter.tools.portability"];
          description?: parameters["rowFilter.tools.description"];
          logo_url?: parameters["rowFilter.tools.logo_url"];
        };
        body: {
          /** tools */
          tools?: definitions["tools"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          full_name?: parameters["rowFilter.users.full_name"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          billing_address?: parameters["rowFilter.users.billing_address"];
          payment_method?: parameters["rowFilter.users.payment_method"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          username?: parameters["rowFilter.users.username"];
          website?: parameters["rowFilter.users.website"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          full_name?: parameters["rowFilter.users.full_name"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          billing_address?: parameters["rowFilter.users.billing_address"];
          payment_method?: parameters["rowFilter.users.payment_method"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          username?: parameters["rowFilter.users.username"];
          website?: parameters["rowFilter.users.website"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          full_name?: parameters["rowFilter.users.full_name"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          billing_address?: parameters["rowFilter.users.billing_address"];
          payment_method?: parameters["rowFilter.users.payment_method"];
          updated_at?: parameters["rowFilter.users.updated_at"];
          username?: parameters["rowFilter.users.username"];
          website?: parameters["rowFilter.users.website"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/values": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.values.id"];
          value?: parameters["rowFilter.values.value"];
          description?: parameters["rowFilter.values.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["values"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** values */
          values?: definitions["values"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.values.id"];
          value?: parameters["rowFilter.values.value"];
          description?: parameters["rowFilter.values.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.values.id"];
          value?: parameters["rowFilter.values.value"];
          description?: parameters["rowFilter.values.description"];
        };
        body: {
          /** values */
          values?: definitions["values"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/votes": {
    get: {
      parameters: {
        query: {
          postId?: parameters["rowFilter.votes.postId"];
          userId?: parameters["rowFilter.votes.userId"];
          value?: parameters["rowFilter.votes.value"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["votes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** votes */
          votes?: definitions["votes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          postId?: parameters["rowFilter.votes.postId"];
          userId?: parameters["rowFilter.votes.userId"];
          value?: parameters["rowFilter.votes.value"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          postId?: parameters["rowFilter.votes.postId"];
          userId?: parameters["rowFilter.votes.userId"];
          value?: parameters["rowFilter.votes.value"];
        };
        body: {
          /** votes */
          votes?: definitions["votes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/handle_new_user": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: any };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  comment_with_author: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    slug?: string;
    createdAt?: string;
    updatedAt?: string;
    title?: string;
    content?: string;
    isPublished?: boolean;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    authorId?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    live?: boolean;
    siteId?: number;
    isPinned?: boolean;
    isDeleted?: boolean;
    isApproved?: boolean;
    author?: string;
  };
  comments_linear_view: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    slug?: string;
    createdAt?: string;
    updatedAt?: string;
    title?: string;
    content?: string;
    isPublished?: boolean;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    authorId?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    live?: boolean;
    siteId?: number;
    isPinned?: boolean;
    isDeleted?: boolean;
    isApproved?: boolean;
    author?: string;
    parent?: string;
    responses?: string;
  };
  comments_thread: {
    id?: number;
    slug?: string;
    createdAt?: string;
    updatedAt?: string;
    title?: string;
    content?: string;
    isPublished?: boolean;
    authorId?: string;
    parentId?: number;
    live?: boolean;
    siteId?: number;
    isPinned?: boolean;
    isDeleted?: boolean;
    isApproved?: boolean;
    author?: string;
    votes?: number;
    upvotes?: number;
    downvotes?: number;
    depth?: number;
    path?: string;
    pathVotesRecent?: string;
    pathLeastRecent?: string;
    pathMostRecent?: string;
  };
  comments_thread_with_user_vote: {
    id?: number;
    slug?: string;
    createdAt?: string;
    updatedAt?: string;
    title?: string;
    content?: string;
    isPublished?: boolean;
    authorId?: string;
    parentId?: number;
    live?: boolean;
    siteId?: number;
    isPinned?: boolean;
    isDeleted?: boolean;
    isApproved?: boolean;
    author?: string;
    votes?: number;
    upvotes?: number;
    downvotes?: number;
    depth?: number;
    path?: string;
    pathVotesRecent?: string;
    pathLeastRecent?: string;
    pathMostRecent?: string;
    userVoteValue?: number;
  };
  comments_with_author_votes: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    slug?: string;
    createdAt?: string;
    updatedAt?: string;
    title?: string;
    content?: string;
    isPublished?: boolean;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    authorId?: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    live?: boolean;
    siteId?: number;
    isPinned?: boolean;
    isDeleted?: boolean;
    isApproved?: boolean;
    author?: string;
    votes?: number;
    upvotes?: number;
    downvotes?: number;
  };
  customers: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    id: string;
    stripe_customer_id?: string;
  };
  flow_items: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    flow?: number;
    /**
     * Note:
     * This is a Foreign Key to `jobs_tools.id`.<fk table='jobs_tools' column='id'/>
     */
    job_tool?: number;
  };
  flows_outputs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    flow?: number;
    /**
     * Note:
     * This is a Foreign Key to `outputs.id`.<fk table='outputs' column='id'/>
     */
    output?: number;
    title?: string;
  };
  growing: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    Name: string;
    Brief?: string;
    Cover?: string;
    "Created at"?: string;
    Files?: string;
    Tags?: string;
    Type?: string;
    URL?: string;
  };
  industries: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    industry?: string;
  };
  job_groups: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    job_group?: string;
    emoji?: string;
  };
  /** Major fields of productive activity */
  jobs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    job?: string;
    /**
     * Note:
     * This is a Foreign Key to `job_groups.id`.<fk table='job_groups' column='id'/>
     */
    job_group?: number;
    description?: string;
  };
  jobs_tools: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Note:
     * This is a Foreign Key to `jobs.id`.<fk table='jobs' column='id'/>
     */
    job?: number;
    /**
     * Note:
     * This is a Foreign Key to `tools.id`.<fk table='tools' column='id'/>
     */
    tool?: number;
    instruction_link?: string;
  };
  listings: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    listing?: string;
    listing_type?:
      | "open_tools"
      | "general_tools"
      | "general_education"
      | "use_cases"
      | "methods_and_processes"
      | "general_communities"
      | "work_repositories"
      | "salary_levels"
      | "app_templates"
      | "markets_and_industries"
      | "work_communities"
      | "organizations";
    URL?: string;
    Description?: string;
    Rating?: number;
  };
  /** General frameworks for getting things done */
  methods: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
  };
  /** Legal frameworks for doing things */
  models: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    model?: string;
    applications?: string;
  };
  organisations: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
  };
  outputs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    output?: string;
    description?: string;
    /**
     * Note:
     * This is a Foreign Key to `job_groups.id`.<fk table='job_groups' column='id'/>
     */
    job_group?: number;
  };
  posts: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    slug: string;
    createdAt: string;
    updatedAt?: string;
    title?: string;
    content?: string;
    isPublished: boolean;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    authorId: string;
    /**
     * Note:
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    parentId?: number;
    live?: boolean;
    siteId: number;
    isPinned: boolean;
    isDeleted: boolean;
    isApproved: boolean;
  };
  prices: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `products.id`.<fk table='products' column='id'/>
     */
    product_id?: string;
    active?: boolean;
    description?: string;
    unit_amount?: number;
    currency?: string;
    type?: "one_time" | "recurring";
    interval?: "day" | "week" | "month" | "year";
    interval_count?: number;
    trial_period_days?: number;
    metadata?: string;
  };
  products: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    active?: boolean;
    name?: string;
    description?: string;
    image?: string;
    metadata?: string;
  };
  sites: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    siteDomain: string;
    ownerId: string;
    name: string;
  };
  subscriptions: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string;
    status?:
      | "trialing"
      | "active"
      | "canceled"
      | "incomplete"
      | "incomplete_expired"
      | "past_due"
      | "unpaid";
    metadata?: string;
    /**
     * Note:
     * This is a Foreign Key to `prices.id`.<fk table='prices' column='id'/>
     */
    price_id?: string;
    quantity?: number;
    cancel_at_period_end?: boolean;
    created: string;
    current_period_start: string;
    current_period_end: string;
    ended_at?: string;
    cancel_at?: string;
    canceled_at?: string;
    trial_start?: string;
    trial_end?: string;
  };
  /** Products and services used for productive activity */
  tools: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    tool?: string;
    category?: string;
    link?: string;
    /**
     * Note:
     * This is a Foreign Key to `models.id`.<fk table='models' column='id'/>
     */
    model?: number;
    portability?: string;
    description?: string;
    logo_url?: string;
  };
  users: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    id: string;
    full_name?: string;
    avatar_url?: string;
    billing_address?: string;
    payment_method?: string;
    updated_at?: string;
    username?: string;
    website?: string;
  };
  values: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    value?: string;
    description?: string;
  };
  votes: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `posts.id`.<fk table='posts' column='id'/>
     */
    postId: number;
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    userId: string;
    value: number;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** comment_with_author */
  "body.comment_with_author": definitions["comment_with_author"];
  "rowFilter.comment_with_author.id": string;
  "rowFilter.comment_with_author.slug": string;
  "rowFilter.comment_with_author.createdAt": string;
  "rowFilter.comment_with_author.updatedAt": string;
  "rowFilter.comment_with_author.title": string;
  "rowFilter.comment_with_author.content": string;
  "rowFilter.comment_with_author.isPublished": string;
  "rowFilter.comment_with_author.authorId": string;
  "rowFilter.comment_with_author.parentId": string;
  "rowFilter.comment_with_author.live": string;
  "rowFilter.comment_with_author.siteId": string;
  "rowFilter.comment_with_author.isPinned": string;
  "rowFilter.comment_with_author.isDeleted": string;
  "rowFilter.comment_with_author.isApproved": string;
  "rowFilter.comment_with_author.author": string;
  /** comments_linear_view */
  "body.comments_linear_view": definitions["comments_linear_view"];
  "rowFilter.comments_linear_view.id": string;
  "rowFilter.comments_linear_view.slug": string;
  "rowFilter.comments_linear_view.createdAt": string;
  "rowFilter.comments_linear_view.updatedAt": string;
  "rowFilter.comments_linear_view.title": string;
  "rowFilter.comments_linear_view.content": string;
  "rowFilter.comments_linear_view.isPublished": string;
  "rowFilter.comments_linear_view.authorId": string;
  "rowFilter.comments_linear_view.parentId": string;
  "rowFilter.comments_linear_view.live": string;
  "rowFilter.comments_linear_view.siteId": string;
  "rowFilter.comments_linear_view.isPinned": string;
  "rowFilter.comments_linear_view.isDeleted": string;
  "rowFilter.comments_linear_view.isApproved": string;
  "rowFilter.comments_linear_view.author": string;
  "rowFilter.comments_linear_view.parent": string;
  "rowFilter.comments_linear_view.responses": string;
  /** comments_thread */
  "body.comments_thread": definitions["comments_thread"];
  "rowFilter.comments_thread.id": string;
  "rowFilter.comments_thread.slug": string;
  "rowFilter.comments_thread.createdAt": string;
  "rowFilter.comments_thread.updatedAt": string;
  "rowFilter.comments_thread.title": string;
  "rowFilter.comments_thread.content": string;
  "rowFilter.comments_thread.isPublished": string;
  "rowFilter.comments_thread.authorId": string;
  "rowFilter.comments_thread.parentId": string;
  "rowFilter.comments_thread.live": string;
  "rowFilter.comments_thread.siteId": string;
  "rowFilter.comments_thread.isPinned": string;
  "rowFilter.comments_thread.isDeleted": string;
  "rowFilter.comments_thread.isApproved": string;
  "rowFilter.comments_thread.author": string;
  "rowFilter.comments_thread.votes": string;
  "rowFilter.comments_thread.upvotes": string;
  "rowFilter.comments_thread.downvotes": string;
  "rowFilter.comments_thread.depth": string;
  "rowFilter.comments_thread.path": string;
  "rowFilter.comments_thread.pathVotesRecent": string;
  "rowFilter.comments_thread.pathLeastRecent": string;
  "rowFilter.comments_thread.pathMostRecent": string;
  /** comments_thread_with_user_vote */
  "body.comments_thread_with_user_vote": definitions["comments_thread_with_user_vote"];
  "rowFilter.comments_thread_with_user_vote.id": string;
  "rowFilter.comments_thread_with_user_vote.slug": string;
  "rowFilter.comments_thread_with_user_vote.createdAt": string;
  "rowFilter.comments_thread_with_user_vote.updatedAt": string;
  "rowFilter.comments_thread_with_user_vote.title": string;
  "rowFilter.comments_thread_with_user_vote.content": string;
  "rowFilter.comments_thread_with_user_vote.isPublished": string;
  "rowFilter.comments_thread_with_user_vote.authorId": string;
  "rowFilter.comments_thread_with_user_vote.parentId": string;
  "rowFilter.comments_thread_with_user_vote.live": string;
  "rowFilter.comments_thread_with_user_vote.siteId": string;
  "rowFilter.comments_thread_with_user_vote.isPinned": string;
  "rowFilter.comments_thread_with_user_vote.isDeleted": string;
  "rowFilter.comments_thread_with_user_vote.isApproved": string;
  "rowFilter.comments_thread_with_user_vote.author": string;
  "rowFilter.comments_thread_with_user_vote.votes": string;
  "rowFilter.comments_thread_with_user_vote.upvotes": string;
  "rowFilter.comments_thread_with_user_vote.downvotes": string;
  "rowFilter.comments_thread_with_user_vote.depth": string;
  "rowFilter.comments_thread_with_user_vote.path": string;
  "rowFilter.comments_thread_with_user_vote.pathVotesRecent": string;
  "rowFilter.comments_thread_with_user_vote.pathLeastRecent": string;
  "rowFilter.comments_thread_with_user_vote.pathMostRecent": string;
  "rowFilter.comments_thread_with_user_vote.userVoteValue": string;
  /** comments_with_author_votes */
  "body.comments_with_author_votes": definitions["comments_with_author_votes"];
  "rowFilter.comments_with_author_votes.id": string;
  "rowFilter.comments_with_author_votes.slug": string;
  "rowFilter.comments_with_author_votes.createdAt": string;
  "rowFilter.comments_with_author_votes.updatedAt": string;
  "rowFilter.comments_with_author_votes.title": string;
  "rowFilter.comments_with_author_votes.content": string;
  "rowFilter.comments_with_author_votes.isPublished": string;
  "rowFilter.comments_with_author_votes.authorId": string;
  "rowFilter.comments_with_author_votes.parentId": string;
  "rowFilter.comments_with_author_votes.live": string;
  "rowFilter.comments_with_author_votes.siteId": string;
  "rowFilter.comments_with_author_votes.isPinned": string;
  "rowFilter.comments_with_author_votes.isDeleted": string;
  "rowFilter.comments_with_author_votes.isApproved": string;
  "rowFilter.comments_with_author_votes.author": string;
  "rowFilter.comments_with_author_votes.votes": string;
  "rowFilter.comments_with_author_votes.upvotes": string;
  "rowFilter.comments_with_author_votes.downvotes": string;
  /** customers */
  "body.customers": definitions["customers"];
  "rowFilter.customers.id": string;
  "rowFilter.customers.stripe_customer_id": string;
  /** flow_items */
  "body.flow_items": definitions["flow_items"];
  "rowFilter.flow_items.id": string;
  "rowFilter.flow_items.flow": string;
  "rowFilter.flow_items.job_tool": string;
  /** flows_outputs */
  "body.flows_outputs": definitions["flows_outputs"];
  "rowFilter.flows_outputs.id": string;
  "rowFilter.flows_outputs.flow": string;
  "rowFilter.flows_outputs.output": string;
  "rowFilter.flows_outputs.title": string;
  /** growing */
  "body.growing": definitions["growing"];
  "rowFilter.growing.Name": string;
  "rowFilter.growing.Brief": string;
  "rowFilter.growing.Cover": string;
  "rowFilter.growing.Created at": string;
  "rowFilter.growing.Files": string;
  "rowFilter.growing.Tags": string;
  "rowFilter.growing.Type": string;
  "rowFilter.growing.URL": string;
  /** industries */
  "body.industries": definitions["industries"];
  "rowFilter.industries.id": string;
  "rowFilter.industries.industry": string;
  /** job_groups */
  "body.job_groups": definitions["job_groups"];
  "rowFilter.job_groups.id": string;
  "rowFilter.job_groups.job_group": string;
  "rowFilter.job_groups.emoji": string;
  /** jobs */
  "body.jobs": definitions["jobs"];
  "rowFilter.jobs.id": string;
  "rowFilter.jobs.job": string;
  "rowFilter.jobs.job_group": string;
  "rowFilter.jobs.description": string;
  /** jobs_tools */
  "body.jobs_tools": definitions["jobs_tools"];
  "rowFilter.jobs_tools.id": string;
  "rowFilter.jobs_tools.job": string;
  "rowFilter.jobs_tools.tool": string;
  "rowFilter.jobs_tools.instruction_link": string;
  /** listings */
  "body.listings": definitions["listings"];
  "rowFilter.listings.id": string;
  "rowFilter.listings.listing": string;
  "rowFilter.listings.listing_type": string;
  "rowFilter.listings.URL": string;
  "rowFilter.listings.Description": string;
  "rowFilter.listings.Rating": string;
  /** methods */
  "body.methods": definitions["methods"];
  "rowFilter.methods.id": string;
  /** models */
  "body.models": definitions["models"];
  "rowFilter.models.id": string;
  "rowFilter.models.model": string;
  "rowFilter.models.applications": string;
  /** organisations */
  "body.organisations": definitions["organisations"];
  "rowFilter.organisations.id": string;
  /** outputs */
  "body.outputs": definitions["outputs"];
  "rowFilter.outputs.id": string;
  "rowFilter.outputs.output": string;
  "rowFilter.outputs.description": string;
  "rowFilter.outputs.job_group": string;
  /** posts */
  "body.posts": definitions["posts"];
  "rowFilter.posts.id": string;
  "rowFilter.posts.slug": string;
  "rowFilter.posts.createdAt": string;
  "rowFilter.posts.updatedAt": string;
  "rowFilter.posts.title": string;
  "rowFilter.posts.content": string;
  "rowFilter.posts.isPublished": string;
  "rowFilter.posts.authorId": string;
  "rowFilter.posts.parentId": string;
  "rowFilter.posts.live": string;
  "rowFilter.posts.siteId": string;
  "rowFilter.posts.isPinned": string;
  "rowFilter.posts.isDeleted": string;
  "rowFilter.posts.isApproved": string;
  /** prices */
  "body.prices": definitions["prices"];
  "rowFilter.prices.id": string;
  "rowFilter.prices.product_id": string;
  "rowFilter.prices.active": string;
  "rowFilter.prices.description": string;
  "rowFilter.prices.unit_amount": string;
  "rowFilter.prices.currency": string;
  "rowFilter.prices.type": string;
  "rowFilter.prices.interval": string;
  "rowFilter.prices.interval_count": string;
  "rowFilter.prices.trial_period_days": string;
  "rowFilter.prices.metadata": string;
  /** products */
  "body.products": definitions["products"];
  "rowFilter.products.id": string;
  "rowFilter.products.active": string;
  "rowFilter.products.name": string;
  "rowFilter.products.description": string;
  "rowFilter.products.image": string;
  "rowFilter.products.metadata": string;
  /** sites */
  "body.sites": definitions["sites"];
  "rowFilter.sites.id": string;
  "rowFilter.sites.siteDomain": string;
  "rowFilter.sites.ownerId": string;
  "rowFilter.sites.name": string;
  /** subscriptions */
  "body.subscriptions": definitions["subscriptions"];
  "rowFilter.subscriptions.id": string;
  "rowFilter.subscriptions.user_id": string;
  "rowFilter.subscriptions.status": string;
  "rowFilter.subscriptions.metadata": string;
  "rowFilter.subscriptions.price_id": string;
  "rowFilter.subscriptions.quantity": string;
  "rowFilter.subscriptions.cancel_at_period_end": string;
  "rowFilter.subscriptions.created": string;
  "rowFilter.subscriptions.current_period_start": string;
  "rowFilter.subscriptions.current_period_end": string;
  "rowFilter.subscriptions.ended_at": string;
  "rowFilter.subscriptions.cancel_at": string;
  "rowFilter.subscriptions.canceled_at": string;
  "rowFilter.subscriptions.trial_start": string;
  "rowFilter.subscriptions.trial_end": string;
  /** tools */
  "body.tools": definitions["tools"];
  "rowFilter.tools.id": string;
  "rowFilter.tools.tool": string;
  "rowFilter.tools.category": string;
  "rowFilter.tools.link": string;
  "rowFilter.tools.model": string;
  "rowFilter.tools.portability": string;
  "rowFilter.tools.description": string;
  "rowFilter.tools.logo_url": string;
  /** users */
  "body.users": definitions["users"];
  "rowFilter.users.id": string;
  "rowFilter.users.full_name": string;
  "rowFilter.users.avatar_url": string;
  "rowFilter.users.billing_address": string;
  "rowFilter.users.payment_method": string;
  "rowFilter.users.updated_at": string;
  "rowFilter.users.username": string;
  "rowFilter.users.website": string;
  /** values */
  "body.values": definitions["values"];
  "rowFilter.values.id": string;
  "rowFilter.values.value": string;
  "rowFilter.values.description": string;
  /** votes */
  "body.votes": definitions["votes"];
  "rowFilter.votes.postId": string;
  "rowFilter.votes.userId": string;
  "rowFilter.votes.value": string;
}

export interface operations {}

export interface external {}
